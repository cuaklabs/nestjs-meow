name: build
on:
  pull_request:
    paths:
      - '.github/workflows/build.yml'
      - 'packages/**/*.ts'
      - 'package-lock.json'
    types:
      - closed
      - opened
      - reopened
      - synchronize
jobs:
  build:
    name: Build Typescript
    runs-on: ubuntu-latest
    if: "!(github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false)"
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint source files
        run: npm run lint

      - name: Compile source files
        run: npm run build:test

      - name: Get current git commit hash
        id: get-git-commit-hash
        run: |
          echo "::set-output name=gitCommitHash::$(git rev-parse HEAD)"

      - uses: actions/cache@v2
        id: ts-build-cache
        with:
          path: ./dist
          key: ts-build-${{ steps.get-git-commit-hash.outputs.gitCommitHash }}
          restore-keys: |
            ts-build-${{ steps.get-git-commit-hash.outputs.gitCommitHash }}

  test:
    needs: build
    name: (OS ${{ matrix.os }}, Node ${{ matrix.node-version }}) Setup machine, build Typescript and launch tests
    runs-on: ${{ matrix.os }}
    if: "!(github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false)"
    strategy:
      matrix:
        node-version:
          - 14
          - 16
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get current git commit hash
        id: get-git-commit-hash
        run: |
          echo "::set-output name=gitCommitHash::$(git rev-parse HEAD)"

      - uses: actions/cache@v2
        id: ts-build-cache
        with:
          path: ./dist
          key: ts-build-${{ steps.get-git-commit-hash.outputs.gitCommitHash }}
          restore-keys: |
            ts-build-${{ steps.get-git-commit-hash.outputs.gitCommitHash }}

      - name: Build on cache miss
        run: npm run build:test
        if: ${{ !steps.ts-build-cache.outputs.cache-hit }}

      - name: Launch Tests
        run: npm run test:js:ci
        if: ${{ !(matrix.node-version == 16 && matrix.os == 'ubuntu-latest') }}

      - name: Launch Tests and generate coverage report
        run: npm run test:js:ci:coverage
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: nestjs-firebase-admin
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' }}
