name: Create release

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: fetch app token
        id: fetch-app-token
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.fetch-app-token.outputs.token }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: package.json

      - name: Install standard-version
        run : pnpm i -g standard-version

      - name: Config git
        run: |
          git config --global user.email "${{ github.event.sender.email }}"
          git config --global user.name "${{ github.event.sender.login }}"

      - name: Apply standard-version
        run: |
          standard-version -t ""  --no-verify --first-release

      - name: Get new version
        id: version
        run: echo "VERSION=$(jq .version package.json -r)" >> $GITHUB_OUTPUT

      - name: Fix packages
        run: |
          sudo apt-get install moreutils
          jq '.version = "${{ steps.version.outputs.VERSION }}"' packages/nestjs-firebase-admin/package.json | sponge packages/nestjs-firebase-admin/package.json

      - name: Commit release
        run: |
          git add .
          git commit --no-verify -m "chore(release): ${{ steps.version.outputs.VERSION }}"
          git tag ${{ steps.version.outputs.VERSION }}
          git push --force
          git push --tags

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ steps.version.outputs.VERSION }} --generate-notes
